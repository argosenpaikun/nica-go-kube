apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-secret
  namespace: psql-ps
  labels:
    app: postgres
data:
  POSTGRES_DB: ps_db
  POSTGRES_USER: ps_user
  POSTGRES_PASSWORD: SecurePassword
  #POSTGRES_DB: ${POSTGRES_DB}
  #POSTGRES_USER: ${POSTGRES_USER}
  #POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-volume
  namespace: psql-ps
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /data/postgresql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-volume-claim
  namespace: psql-ps
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: psql-ps
spec:
  replicas: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14.17
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: psql-ps
  labels:
    app: postgres
spec:
  type: LoadBalancer
  ports:
    - port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    app: postgres
status:
  loadBalancer: {}